// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AccountsColumns holds the columns for the "accounts" table.
	AccountsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "sheets_credentials", Type: field.TypeBytes, Nullable: true},
		{Name: "spreadsheet_id", Type: field.TypeString, Nullable: true},
	}
	// AccountsTable holds the schema information for the "accounts" table.
	AccountsTable = &schema.Table{
		Name:       "accounts",
		Columns:    AccountsColumns,
		PrimaryKey: []*schema.Column{AccountsColumns[0]},
	}
	// CategoriesColumns holds the columns for the "categories" table.
	CategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "quota", Type: field.TypeUint32},
	}
	// CategoriesTable holds the schema information for the "categories" table.
	CategoriesTable = &schema.Table{
		Name:       "categories",
		Columns:    CategoriesColumns,
		PrimaryKey: []*schema.Column{CategoriesColumns[0]},
	}
	// ExpensesColumns holds the columns for the "expenses" table.
	ExpensesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "amount", Type: field.TypeFloat64},
		{Name: "description", Type: field.TypeString},
	}
	// ExpensesTable holds the schema information for the "expenses" table.
	ExpensesTable = &schema.Table{
		Name:       "expenses",
		Columns:    ExpensesColumns,
		PrimaryKey: []*schema.Column{ExpensesColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "telegram_id", Type: field.TypeInt64, Unique: true},
		{Name: "account_member", Type: field.TypeInt, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "users_accounts_member",
				Columns:    []*schema.Column{UsersColumns[3]},
				RefColumns: []*schema.Column{AccountsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// AccountCategoriesColumns holds the columns for the "account_categories" table.
	AccountCategoriesColumns = []*schema.Column{
		{Name: "account_id", Type: field.TypeInt},
		{Name: "category_id", Type: field.TypeInt},
	}
	// AccountCategoriesTable holds the schema information for the "account_categories" table.
	AccountCategoriesTable = &schema.Table{
		Name:       "account_categories",
		Columns:    AccountCategoriesColumns,
		PrimaryKey: []*schema.Column{AccountCategoriesColumns[0], AccountCategoriesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "account_categories_account_id",
				Columns:    []*schema.Column{AccountCategoriesColumns[0]},
				RefColumns: []*schema.Column{AccountsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "account_categories_category_id",
				Columns:    []*schema.Column{AccountCategoriesColumns[1]},
				RefColumns: []*schema.Column{CategoriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// CategoryExpensesColumns holds the columns for the "category_expenses" table.
	CategoryExpensesColumns = []*schema.Column{
		{Name: "category_id", Type: field.TypeInt},
		{Name: "expense_id", Type: field.TypeInt},
	}
	// CategoryExpensesTable holds the schema information for the "category_expenses" table.
	CategoryExpensesTable = &schema.Table{
		Name:       "category_expenses",
		Columns:    CategoryExpensesColumns,
		PrimaryKey: []*schema.Column{CategoryExpensesColumns[0], CategoryExpensesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "category_expenses_category_id",
				Columns:    []*schema.Column{CategoryExpensesColumns[0]},
				RefColumns: []*schema.Column{CategoriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "category_expenses_expense_id",
				Columns:    []*schema.Column{CategoryExpensesColumns[1]},
				RefColumns: []*schema.Column{ExpensesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AccountsTable,
		CategoriesTable,
		ExpensesTable,
		UsersTable,
		AccountCategoriesTable,
		CategoryExpensesTable,
	}
)

func init() {
	UsersTable.ForeignKeys[0].RefTable = AccountsTable
	AccountCategoriesTable.ForeignKeys[0].RefTable = AccountsTable
	AccountCategoriesTable.ForeignKeys[1].RefTable = CategoriesTable
	CategoryExpensesTable.ForeignKeys[0].RefTable = CategoriesTable
	CategoryExpensesTable.ForeignKeys[1].RefTable = ExpensesTable
}
